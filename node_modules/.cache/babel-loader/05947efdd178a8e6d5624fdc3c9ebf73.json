{"ast":null,"code":"var _jsxFileName = \"/Users/salehashujaat/Desktop/Saleha Shujaat/Frontend/my-game/My-game/src/components/Board/Square/Square.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Cross from './Cross/Cross.jsx';\nimport Zero from './Zero/Zero.jsx';\nimport { drawXAction, drawOAction } from '../../../actions/boardActions.js';\nimport { toggleTurnAction } from '../../../actions/playerActions.js';\n\nfunction Square(props) {\n  const {\n    symbol,\n    index,\n    draw,\n    players,\n    board,\n    toggleTurn\n  } = props;\n  const disabled = symbol ? 'disabled' : '';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'cell ' + disabled,\n    onClick: () => draw(board, players, index).then(() => {\n      toggleTurn();\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, symbol ? symbol === 'X' ? /*#__PURE__*/React.createElement(Cross, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(Zero, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 47\n    }\n  }) : '');\n}\n\nconst mapStateToProps = _ref => {\n  let {\n    board,\n    players\n  } = _ref;\n  return {\n    board,\n    players\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  draw: (board, players, cellIndex) => {\n    if (!board[cellIndex]) {\n      if (players[players.turn] === 'X') {\n        return dispatch(drawXAction(cellIndex));\n      } else {\n        return dispatch(drawOAction(cellIndex));\n      }\n    }\n  },\n  toggleTurn: () => dispatch(toggleTurnAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Square);","map":{"version":3,"sources":["/Users/salehashujaat/Desktop/Saleha Shujaat/Frontend/my-game/My-game/src/components/Board/Square/Square.jsx"],"names":["React","connect","Cross","Zero","drawXAction","drawOAction","toggleTurnAction","Square","props","symbol","index","draw","players","board","toggleTurn","disabled","then","mapStateToProps","mapDispatchToProps","dispatch","cellIndex","turn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kCAAzC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA;AAAvC,MAAsDN,KAA5D;AAEA,QAAMO,QAAQ,GAAGN,MAAM,GAAG,UAAH,GAAgB,EAAvC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAE,UAAUM,QAA1B;AAAoC,IAAA,OAAO,EAAE,MAAMJ,IAAI,CAACE,KAAD,EAAQD,OAAR,EAAiBF,KAAjB,CAAJ,CAA4BM,IAA5B,CAAiC,MAAM;AAAEF,MAAAA,UAAU;AAAK,KAAxD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,GAAIA,MAAM,KAAK,GAAX,gBAAiB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,gBAA6B,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,GAA6C,EADtD,CADF;AAKD;;AAED,MAAMQ,eAAe,GAAG;AAAA,MAAC;AAAEJ,IAAAA,KAAF;AAASD,IAAAA;AAAT,GAAD;AAAA,SAAyB;AAAEC,IAAAA,KAAF;AAASD,IAAAA;AAAT,GAAzB;AAAA,CAAxB;;AAEA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,IAAI,EAAE,CAACE,KAAD,EAAQD,OAAR,EAAiBQ,SAAjB,KAA+B;AACnC,QAAI,CAACP,KAAK,CAACO,SAAD,CAAV,EAAuB;AACrB,UAAIR,OAAO,CAACA,OAAO,CAACS,IAAT,CAAP,KAA0B,GAA9B,EAAmC;AACjC,eAAOF,QAAQ,CAACf,WAAW,CAACgB,SAAD,CAAZ,CAAf;AACD,OAFD,MAEO;AACL,eAAOD,QAAQ,CAACd,WAAW,CAACe,SAAD,CAAZ,CAAf;AACD;AACF;AACF,GATqC;AAUtCN,EAAAA,UAAU,EAAE,MAAMK,QAAQ,CAACb,gBAAgB,EAAjB;AAVY,CAAL,CAAnC;;AAaA,eAAeL,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,MAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Cross from './Cross/Cross.jsx'\nimport Zero from './Zero/Zero.jsx'\nimport { drawXAction, drawOAction } from '../../../actions/boardActions.js';\nimport { toggleTurnAction } from '../../../actions/playerActions.js';\n\nfunction Square(props) {\n  const { symbol, index, draw, players, board, toggleTurn } = props\n\n  const disabled = symbol ? 'disabled' : ''\n\n  return (\n    <div className={'cell ' + disabled} onClick={() => draw(board, players, index).then(() => { toggleTurn(); })}>\n      {symbol ? (symbol === 'X' ? <Cross /> : <Zero />) : ''}\n    </div >\n  )\n}\n\nconst mapStateToProps = ({ board, players }) => ({ board, players })\n\nconst mapDispatchToProps = dispatch => ({\n  draw: (board, players, cellIndex) => {\n    if (!board[cellIndex]) {\n      if (players[players.turn] === 'X') {\n        return dispatch(drawXAction(cellIndex))\n      } else {\n        return dispatch(drawOAction(cellIndex))\n      }\n    }\n  },\n  toggleTurn: () => dispatch(toggleTurnAction())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Square)"]},"metadata":{},"sourceType":"module"}